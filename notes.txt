Completed 18.02.14

Currently runs on jetty not tomcat, as it ships with solr. Versions need more specific pinning probably.

Had to create git repos of static/ and svn trunk/ codebase because svn kept causing trouble with logins.

Apachectl -V seems to suggest the main config file is /etc/apache2/apache2.conf, the httpd root being system

However, the apache buildout recipe (reappropriated) places an include in the /parts/apache/conf/httpd.conf file. This includes
a virtual_localhost.conf script in /parts/apache-setup/conf.d. I've no idea if this is relevant at all.

It would seem to me that the default apache config may well simply be loading up the sites-available/ WSGI settings placed in default, and that everything else may be irrelevant. I'm going to systematically remove stuff and find out.

---

\pip install simplejson, MySQL-Python, Pillow, Django (as this may not have installed in the first place)

added python-mysqldb to ubuntu reqs

buildout apache seems to run apache2 confs in /etc/apache

need to include /<django project>/httpd.conf, not local one (for now have sent httpd.conf to /etc/apache2)

point python path to DIR that contains the django parent dir, not the parent dir itself!!!!!!!!

changed mlgb.wsgi to append sys path with django and also the /mysite/apache root folder. This probably still needs to point to mysite.apache.
settings, however.

Copy sites-enabled and sites-available to parts/apache:
cp -rf sites-available /home/django/sites/django/parts/apache/
cp -rf sites-enabled /home/django/sites/django/parts/apache/

Remove references to conf.d and ports.conf in apache.conf in /etc/apache2/


MUST PUT WSGIALIAS IN SITES-AVAILABLE DEFAULT FILE!!!!!!!!!!!! V IMPORTANT!!!!!!!!!!!!

-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------

CREATE DATABASE mlgb;
GRANT ALL PRIVILEGES ON mlgb.* TO "mlgbAdmin"@"localhost" IDENTIFIED BY "blessing";
FLUSH PRIVILEGES;
EXIT


sudo mount -t vboxsf vmsharedfolder ~/host

mysql -u mlgbAdmin -p -h localhost mlgb < mlgb_db_dump.sql 

Installing JDK and solr
--------------

X = buildout R = readme.md

X sudo apt-get install openjdk-6-jdk 
X export JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64   # using "collective.recipe.environment"
X export PATH=$PATH:/usr/lib/jvm/java-6-openjdk-amd64/bin   # using "collective.recipe.environment"

~/sites/django/parts/solr/solr$ rm -rf conf
X ~/sites/django/parts/solr/solr$ svn co https://damssupport.bodleian.ox.ac.uk/svn/mlgb3/trunk/solr/ ./

changed following in solrconfig.xml in /parts/solr/solr/books/conf from "/usr/share/..." to
X <dataDir>/home/django/sites/django/parts/solr/solr/books/data</dataDir> 
X <str name="config">/home/django/sites/django/parts/solr/solr/books/conf/data-config.xml</str>

changed following in solrconfig.xml in /parts/solr/solr/catalogues/conf from "/usr/share/..." to
X <dataDir>/home/django/sites/django/parts/solr/solr/catalogues/data</dataDir> 
X <str name="config">/home/django/sites/django/parts/solr/solr/catalogues/conf/data-config.xml</str>

dpkg-query -L libmysql-java

X Added libmysql-java to ubuntu-requirements

X cp /usr/share/java/mysql-connector-java.jar ~/sites/django/parts/solr/lib
X cp /usr/share/java/mysql.jar ~/sites/django/parts/solr/lib

X put solr.xml (as follows) in /parts/solr/solr/ (the jetty container instance)

<?xml version="1.0" encoding="UTF-8" ?>
<solr persistent="true" sharedLib="lib">
  <cores adminPath="/admin/cores">
    <core name="books" instanceDir="books" />
    <core name="catalogues" instanceDir="catalogues" />
  </cores>
</solr>

X in /mysite/mlgb/config.py

change: 
solr_host='localhost:8180'
to:
solr_host='0.0.0.0:1234'

R start solr w/ home setting
java -Dsolr.solr.=/home/django/sites/django/parts/solr/solr -jar /home/django/sites/django/parts/solr/start.jar

R start initial full import
http://0.0.0.0:1234/solr/books/dataimport?command=full-import
http://0.0.0.0:1234/solr/catalogues/dataimport?command=full-import
